syntax = "proto3";

package elegram;

// REQUESTS
/*___________________________________________________________________________*/

// 1
message RegisterRequest {
    string name = 1;
    string email = 2;
    string password = 3;
}

// 2
message LoginRequest {
    string email = 1;
    string password = 2;
}

// 3
message AllMyChatsRequest {
}

// 4
message AllMyContactsRequest {
}

// 5
message MessagesRequest {
    uint64 chat_id = 1;
}

message MessageToSend {
    uint64 chat_id = 1;
    string text = 2;
}

// 6
message SendMessageRequest {
    MessageToSend mesg = 1;
}

// 7
message AddContactRequest {
    string email = 1;
}

message Request {
    oneof msg {
        RegisterRequest register_request = 1;
        LoginRequest login_request = 2;
        AllMyChatsRequest chats_request = 3;
        AllMyContactsRequest contacts_request = 4;
        MessagesRequest messages_request = 5;
        SendMessageRequest send_mesg_request = 6;
        AddContactRequest add_contact_request = 7;
    }
}

// RESPONSES
/*___________________________________________________________________________*/

// 1
message StatusResponse {
    enum RESULT {
        ACCEPTED = 0;
        REJECTED = 1;
    }
    RESULT result = 1;
}

message Chat {
    uint64 chat_id = 1;
    string title = 2;
}

// 2
message ChatsResponse {
    repeated Chat chats = 1;
}

message Contact {
    string name = 1;
    string email = 2;
}

// 3
message ContactsResponse {
    repeated Contact contacts = 1;
}

message MessageToRecieve {
    uint64 sender_id = 1;
    uint64 chat_id = 2;
    string text = 3;
    // bool readed = 4;
    // todo add timestampt
}

// 4
message MessagesResponse {
    repeated MessageToRecieve messages = 1;
}

message Response {
    oneof msg {
        StatusResponse status_response = 1;
        ChatsResponse chats_response = 2;
        ContactsResponse contacts_response = 3;
        MessagesResponse messages_response = 4;
    }
}

/*___________________________________________________________________________*/

message WrappedMessage {
    oneof msg {
        Response response = 1;
        Request request = 2;
    }
}

message LengthPrefix {
    fixed64 length = 1;
}
