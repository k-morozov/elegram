language: cpp
sudo: required
dist: xenial
compiler:
  - gcc
os:
  - linux
env:
  global:
    - VERSION_MAJOR=1
    - VERSION_MINOR=0
branches:
  only:
    - master
before_install:
  # firstly install qt, cause cosmic_packages broke qt packages dependencies (why?)
  # add qt repo
  - sudo add-apt-repository --yes ppa:beineri/opt-qt-5.12.0-xenial
  - sudo apt-get update -qq
  - sudo apt-get -y install qt512-meta-minimal mesa-common-dev libglu1-mesa-dev

  - QTDIR="/opt/qt512"
  - PATH="$QTDIR/bin:$PATH"
  - source /opt/qt512/bin/qt512-env.sh
  - mkdir -p build/server_build build/client_build

install:
  # add modern repo for loading boost 1.67 packages, want thread_pool
  - sudo cp config_travis/cosmic_packages.pref /etc/apt/preferences.d/cosmic_package-repo.pref
  - sudo cp config_travis/cosmic.list          /etc/apt/sources.list.d/cosmic.list
  - sudo apt-get update -qq

  # install boost 1.67 from cosmic repo
  - sudo apt-get -y install libboost-all-dev libprotobuf-dev protobuf-compiler -t cosmic

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - g++-7
      - libpq-dev # and may be postgresql
      - libpqxx-dev
      - postgresql-server-dev-all

script:
  - CXX=/usr/bin/g++-7 CC=/usr/bin/gcc-7
  - cd protocol

  # that is how to generate files for serialization/deserialization
  - protoc  --cpp_out=../server/src/proto messages.proto
  - protoc  --cpp_out=../client/src/protobuf messages.proto

  # build server
  - cd ../build/server_build
  - cmake -DCMAKE_PREFIX_PATH=/opt/qt512/lib/cmake ../../server
  - cmake --build .
  - cmake --build . --target package

  # build client
  - cd ../client_build
  - cmake -DCMAKE_PREFIX_PATH=/opt/qt512/lib/cmake ../../client
  - cmake --build .
  - cmake --build . --target package
deploy:
  - provider: script
    skip_cleanup: true
    on:
      branch: master
    script:
      - cd ..
      - curl -T server_build/elegram_server-$VERSION_MAJOR.$VERSION_MINOR.$TRAVIS_BUILD_NUMBER-Linux.deb -umkvdv:$BINTRAY_API_KEY "https://api.bintray.com/content/mkvdv/elegram/elegram/elegram_server/$VERSION_MAJOR.$VERSION_MINOR.$TRAVIS_BUILD_NUMBER/elegram_server-$VERSION_MAJOR.$VERSION_MINOR.$TRAVIS_BUILD_NUMBER-Linux.deb;deb_distribution=trusty;deb_component=main;deb_architecture=amd64;publish=1"
      - curl -T client_build/elegram_client-$VERSION_MAJOR.$VERSION_MINOR.$TRAVIS_BUILD_NUMBER-Linux.deb -umkvdv:$BINTRAY_API_KEY "https://api.bintray.com/content/mkvdv/elegram/elegram/elegram_client/$VERSION_MAJOR.$VERSION_MINOR.$TRAVIS_BUILD_NUMBER/elegram_client-$VERSION_MAJOR.$VERSION_MINOR.$TRAVIS_BUILD_NUMBER-Linux.deb;deb_distribution=trusty;deb_component=main;deb_architecture=amd64;publish=1"
